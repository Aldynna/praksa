<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script type="text/javascript" src="http://code.jquery.com/jquery-latest.min.js"></script>


</head>
<body onload="getLocation()">

<p id="demo"></p>
<!--<button onclick="drop()">START</button>-->

<button onclick="clearInterval(myVar)">Stop time</button>


<div id="map"  ></div>
<div id="map1"  ></div>

<button onclick="granice()">JOS</button>
<script>
    var username="aldina";
    var x = document.getElementById("demo");
    var markers = [];
    var pokemoni=[];
    var map;
    var latitude;
    var longitude;
    var uluru;
    var latlon;
    var icon;
    var bounds;
    pointsrand=[];
    var myVar;
    var southWest;
    var northEast;
    var latSpan;
    var lngSpan;
    var time;
    var pokemoni=new Array(5);


    function initMap() {
        uluru ={lat: latitude , lng: longitude};
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 20,
            center: uluru,
            mapTypeId: 'roadmap'
        });
        for(var j=0;j<5;j++) pokemoni[j]=0;
        myVar=window.setInterval(pomjeraj,2000);
       granice()
    }

 function granice() {

        bounds = map.getBounds();
        southWest = bounds.getSouthWest();
        northEast = bounds.getNorthEast();
        lngSpan = northEast.lng() - southWest.lng();
        latSpan = northEast.lat() - southWest.lat();
        //myVar=window.setInterval(myTimer,2000);
        //myV=window.setInterval(pomjeraj,2000);
        //pomjeraj();
        //myTimer();

    }



    function randomNumber(minimum, maximum){
        return Math.round( Math.random() * (maximum - minimum) + minimum);
    }

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.watchPosition(showPosition, showError);
        } else {
            x.innerHTML = "Geolocation is not supported by this browser.";
        }
    }

    function showPosition(position) {
        latitude  = position.coords.latitude;
        longitude = position.coords.longitude;
        latlon="lat:"+latitude+","+"lng:"+longitude;
        initMap()
    }




    function ikona(da) {

        icon = {
            url:da.url, //'http://rs231.pbsrc.com/albums/ee83/spell-edicion/Togepix100.gif~c200',
            scaledSize: new google.maps.Size(35, 35)
        };
    }

   function pomjeraj() {
        $.ajax({
            method: "GET",
            url: "/koord",
            data: { username: "Aldy", password: "Boston" }
        })
                .done(function( msg ) {

                   for(var i=0;i<5;i++) {
                        if (pokemoni[i] == 0) {
                            pokemoni[i] = 1,
                                    pointsrand[i] =new google.maps.LatLng(msg.lt,msg.lon);
                                    addMarkerWithTimeout(pointsrand[i], (i + 2) * randomNumber(1000, 2000), i,msg.pokemon);
                            i = 5;
                        }
                    }
                   // marker.setPosition(KK);
                  //  map.setCenter(KK);
                    //alert( "Data Saved: " + msg );
               });

        //var KK = {lat: granice.jug + latRaspon * Math.random(),
        //   lng: granice.istok + lngRaspon * Math.random()};
        //marker.setPosition(KK);
       // map.setCenter(KK);
    }
    function myTimer() {

        for(var i=0;i<5;i++)
        {
            if(pokemoni[i]==0) {
                pokemoni[i]=1,

                        pointsrand[i] = new google.maps.LatLng(southWest.lat() + latSpan * Math.random(), southWest.lng() + lngSpan * Math.random());
                addMarkerWithTimeout(pointsrand[i], (i + 2) * randomNumber(1000, 2000), i);
                i=5;
            }

        }

    }
    function addMarkerWithTimeout(position, timeout,num,pok) {

        ikona(pok);
        window.setTimeout(function() {
            markers[num]=(new google.maps.Marker({
                position: position,
                map: map,
                icon:icon,
                animation: google.maps.Animation.BOUNCE
            }));
            clearMarkers(num);

        }, timeout);


    }



    function clearMarkers(num) {
        markers[num].addListener('click', function() {
           map.setZoom(25);
            map.setCenter(markers[num].getPosition());
        });

        window.setTimeout(function() {
            markers[num].setMap(null);
            pokemoni[num]=0;
        }, randomNumber(2000,4000));

    }

    function showError(error) {
        switch(error.code) {
            case error.PERMISSION_DENIED:
                x.innerHTML = "User denied the request for Geolocation."
                break;
            case error.POSITION_UNAVAILABLE:
                x.innerHTML = "Location information is unavailable."
                break;
            case error.TIMEOUT:
                x.innerHTML = "The request to get user location timed out."
                break;
            case error.UNKNOWN_ERROR:
                x.innerHTML = "An unknown error occurred."
                break;
        }
    }

</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBUdNOR_t00dUE5oObEiBcx9L3DVGGeBSI&callback=initMap">
</script>
</body>
</html>